pub fn as_ast_node(&self, blocs: &BlocsMap) -> ast::Node {
	let data: ast::NodeData = match self.bloc_type {
		BlocType::VariableAssignment => {
			let value_slot_id = self.slots[0].get_id();
			let inner = blocs.get(&value_slot_id).expect("caca, ce bloc n'existe pas !!!").as_ast_node(blocs);
			let value = Box::new(inner);
			let name: String = todo!();
			NodeData::VariableAssignment(ast::VariableAssignment { name, value })
		}
		BlocType::IfElse => {
			let if_ = ast::If { condition: todo!(), sequence: todo!() };
			NodeData::IfElse(ast::IfElse { if_, elif: todo!(), else_: todo!() })
		}
		_ => todo!("other bloc types"),
	};
	ast::Node { id: self.id, data }
}
